<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.molgenis</groupId>
    <artifactId>vibe</artifactId>
    <version>2.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <scm>
        <connection>
            scm:git:https://${env.GITHUB_USER}:${env.GITHUB_TOKEN}@github.com/molgenis/vibe.git
        </connection>
        <url>https://github.com/molgenis/vibe</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- fix for: https://maven.apache.org/general.html#encoding-warning -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- vibe TDB information (requirement: vibe-tdb.version <= project.version) -->
        <vibe-tdb.version>2.0.0</vibe-tdb.version>
        <vibe-tdb.archive>vibe-${vibe-tdb.version}-tdb.tgz</vibe-tdb.archive>
        <vibe-tdb.download>https://molgenis.org/downloads/vibe/${vibe-tdb.archive}</vibe-tdb.download>

        <!-- used hpo.owl github tag -->
        <hpo-owl.tag>v2019-11-08</hpo-owl.tag>
        <hpo-owl.download>https://raw.githubusercontent.com/obophenotype/human-phenotype-ontology/${hpo-owl.tag}/hp.owl</hpo-owl.download>

        <!-- defines created jar names -->
        <jar.skinny>vibe-${project.version}</jar.skinny>
        <jar.fat>vibe-with-dependencies-${project.version}</jar.fat>

        <!-- thin jar dependencies directory -->
        <jar.skinny.dependency-dir>dependency-jars</jar.skinny.dependency-dir>

        <!-- defines java version of code -->
        <java.version>1.8</java.version>

        <!-- artifact publish properties -->
        <sonatype.id>sonatype-nexus-staging</sonatype.id>

        <!-- sonar configuration -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>molgenis</sonar.organization>
        <sonar.github.repository>molgenis/vibe</sonar.github.repository>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>${sonatype.id}</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>${sonatype.id}</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- define java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArguments>
                        <Xlint/>
                    </compilerArguments>
                </configuration>
            </plugin>

            <!-- create skinny jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <finalName>${jar.skinny}</finalName>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>org.molgenis.vibe.VibeApplication</mainClass>
                            <classpathPrefix>${jar.skinny.dependency-dir}</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- generate dependency jars -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${jar.skinny.dependency-dir}/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- create fat jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <!-- run shade at package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <!-- set main class -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.molgenis.vibe.VibeApplication</mainClass>
                                </transformer>
                                <!-- prevent license duplications -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
                                <!-- manages META_INF/services/ files for usage in shaded jar -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                            <!-- file name of shaded jar -->
                            <finalName>${jar.fat}</finalName>
                            <!-- excludes all classes of dependencies that are not used (also excludes non-specified classes) -->
                            <!-- <minimizeJar>true</minimizeJar> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generating Docker image -->
            <!-- Does not run by default but you can explicitly call dockerfile:build dockerfile:tag dockerfile:push -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.10</version>
                <configuration>
                    <repository>registry.hub.docker.com/molgenis/vibe</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <jar_file>${jar.fat}.jar</jar_file>
                        <vibe_tdb_archive>${vibe-tdb.archive}</vibe_tdb_archive>
                        <vibe_tdb_download>${vibe-tdb.download}</vibe_tdb_download>
                        <hpo_owl_download>${hpo-owl.download}</hpo_owl_download>
                    </buildArgs>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                </configuration>
            </plugin>

            <!-- checksum creation -->
            <plugin>
                <groupId>net.nicoulaj.maven.plugins</groupId>
                <artifactId>checksum-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>files</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <fileSets>
                        <fileSet>
                            <directory>target</directory>
                            <includes>
                                <include>${jar.skinny}.jar</include>
                                <include>${jar.fat}.jar</include>
                                <!--<include>${jar.skinny.dependency-dir}/*</include>-->
                            </includes>
                        </fileSet>
                    </fileSets>
                    <algorithms>
                        <!-- see: https://en.wikipedia.org/wiki/Secure_Hash_Algorithms -->
                        <algorithm>MD5</algorithm>
                        <algorithm>SHA-512</algorithm>
                        <algorithm>SHA3-512</algorithm>
                    </algorithms>
                    <csvSummary>true</csvSummary> <!-- creates csv summary file with all checksums -->
                    <individualFiles>true</individualFiles> <!-- individual file per checksum and per artifact -->
                    <individualFilesOutputDirectory>checksums</individualFilesOutputDirectory> <!-- dir for individual files -->
                </configuration>
            </plugin>

            <!-- sets parameters for unit testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <argLine>-Xmx1g</argLine>
                </configuration>
            </plugin>

            <!-- integrates SonarQube -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.5.0.1254</version>
            </plugin>

            <!-- JAva COde COverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.2</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- deploy to sonatype nexus -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>${sonatype.id}</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <!-- closing the repo in the build fails miserably with a connection reset error -->
                    <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                </configuration>
            </plugin>

            <!-- plugin for releasing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <scmCommentPrefix>[ci skip] [maven-release-plugin]${line.separator}</scmCommentPrefix>
                </configuration>
            </plugin>

            <!-- sign artifacts -->
            <plugin>
                <!-- sign in a non-interactive way -->
                <groupId>org.kohsuke</groupId>
                <artifactId>pgp-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Disables 'SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".' warnings, see: https://www.slf4j.org/codes.html#StaticLoggerBinder -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>1.7.29</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>apache-jena-libs</artifactId>
            <version>3.13.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.0.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>